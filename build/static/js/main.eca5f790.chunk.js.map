{"version":3,"sources":["theme/global.style.js","App.style.js","components/List/List.style.js","components/List/ListHeadline/ListHeadline.style.js","components/List/ListHeadline/ListHeadline.js","components/List/ListItem/ListItem.style.js","components/List/ListItem/ListItem.js","hooks/useModList.js","components/List/List.js","components/Controls/Controls.style.js","components/Sorters/Sorter.style.js","components/Sorters/Sorter.js","components/Filters/Filter.style.js","components/Filters/Filter.js","components/Controls/Controls.js","hooks/useFetchData.js","App.js","reportWebVitals.js","index.js"],"names":["createGlobalStyle","StyledContainer","styled","div","StyledListComponent","StyledList","ol","StyledHeadline","StyledColumn","h3","ListHeadline","props","StyledItem","li","StyledText","p","ListItem","name","country","industry","numberOfEmployees","SetOriginalListContext","React","createContext","UseOriginalListContext","SetListContext","UseListContext","ResetListContext","useOriginalList","useContext","useList","useListUpdate","ListProvider","children","useState","originalList","setOriginalList","modifiedList","setModifiedList","Provider","value","data","List","list","map","element","id","StyledControls","StyledSorter","Sorter","title","handleClick","isToggle","onClick","ul","Filter","itemsList","keyNum","createMenuItems","filterCountryList","filterIndustryList","Controls","nameSortToggle","setNameSortToggle","employeeSortToggle","setEmployeeSortToggle","setList","resetList","countryItemsList","Set","sort","industryItemsList","e","clickedItemName","target","firstChild","nodeValue","clickedItem","style","background","colorToggledFilter","includes","some","_","remove","push","find","length","union","handleFiltering","sortBy","reverse","useFetchData","url","setData","useEffect","fetchData","a","axios","get","console","error","App","useOgList","setOgList","className","Array","isArray","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAEeA,cAAf,oQCAaC,EAAkBC,IAAOC,IAAV,wJCAfC,EAAsBF,IAAOC,IAAV,iGAOnBE,EAAaH,IAAOI,GAAV,yDCPVC,EAAiBL,IAAOC,IAAV,4JAOdK,EAAeN,IAAOO,GAAV,yJ,OCUVC,EAjBM,SAAC,GAAD,EAAEC,MAAF,OACnB,eAACJ,EAAD,WACE,cAACC,EAAD,mBAGA,cAACA,EAAD,sBAGA,cAACA,EAAD,uBAGA,cAACA,EAAD,4BCXSI,EAAaV,IAAOW,GAAV,+RAcVC,EAAaZ,IAAOa,EAAV,+ICKRC,EAnBE,SAAC,GAAa,IAAZL,EAAW,EAAXA,MACjB,OACE,eAACC,EAAD,WACE,cAACE,EAAD,UACGH,EAAMM,OAET,cAACH,EAAD,UACGH,EAAMO,UAET,cAACJ,EAAD,UACGH,EAAMQ,WAET,cAACL,EAAD,UACGH,EAAMS,wB,OCbTC,EAAyBC,IAAMC,gBAC/BC,EAAyBF,IAAMC,gBAC/BE,EAAiBH,IAAMC,gBACvBG,EAAiBJ,IAAMC,gBACvBI,EAAmBL,IAAMC,gBAElBK,EAAkB,WAC7B,OAAOC,qBAAWL,IAOPM,EAAU,WACrB,OAAOD,qBAAWH,IAGPK,EAAgB,WAC3B,OAAOF,qBAAWJ,IAuCLO,EAhCa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAeA,OACE,cAACd,EAAuBe,SAAxB,CAAiCC,MAAOL,EAAxC,SACE,cAACd,EAAuBkB,SAAxB,CAAiCC,MAPV,SAACC,GAC1BL,EAAgBK,IAMd,SACE,cAACf,EAAea,SAAhB,CAAyBC,MAAOH,EAAhC,SACE,cAACZ,EAAec,SAAhB,CAAyBC,MAjBd,SAACC,GAClBH,EAAgBG,IAgBV,SACE,cAACd,EAAiBY,SAAlB,CAA2BC,MAdnB,WAChBF,EAAgBH,IAaR,SACGF,aChCAS,EAbF,WACX,IAAMC,EAAOb,IAEb,OACE,eAAC1B,EAAD,WACE,cAAC,EAAD,IACA,cAACC,EAAD,UACGsC,EAAKC,KAAI,SAACC,GAAD,OAAa,cAAC,EAAD,CAAUlC,MAAOkC,GAAcA,EAAQC,a,QCXzDC,EAAiB7C,IAAOC,IAAV,sNCAd6C,EAAe9C,IAAOC,IAAV,8PCQV8C,EARA,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACpC,OACE,cAACJ,EAAD,CAAcK,QAASF,EAAaC,SAAUA,EAA9C,SACGF,KCFM7C,EAAaH,IAAOoD,GAAV,mFAMV/C,EAAiBL,IAAOW,GAAV,kGAMdD,EAAaV,IAAOW,GAAV,oKCWR0C,EAxBA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWL,EAAyB,EAAzBA,YAAaD,EAAY,EAAZA,MAcxC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,UACGA,IAfiB,WACtB,IAAIO,EAAS,EACb,OAAOD,EAAUZ,KAAI,SAAAC,GAEnB,OADAY,IAEE,cAAC,EAAD,CAAyBJ,QAASF,EAAlC,SACGN,GADcY,MAYlBC,O,gBCXDC,GAAoB,GACpBC,GAAqB,GAgFZC,GA9EE,WACf,MAA4C3B,oBAAS,GAArD,mBAAO4B,EAAP,KAAuBC,EAAvB,KACA,EAAoD7B,oBAAS,GAA7D,mBAAO8B,EAAP,KAA2BC,EAA3B,KAEM9B,EAAeP,IACfS,EAAeP,IACfoC,EAAUnC,IACVoC,EPKCtC,qBAAWF,GOJZyC,EAAmB,YAAI,IAAIC,IAAIlC,EAAaS,KAAI,SAAAC,GAAO,OAAIA,EAAQ3B,aAAWoD,OAC9EC,EAAoB,YAAI,IAAIF,IAAIlC,EAAaS,KAAI,SAAAC,GAAO,OAAIA,EAAQ1B,cAAYmD,OAuBhFnB,EAAc,SAACqB,GACnB,IAAMC,EAAkBD,EAAEE,OAAOC,WAAWC,WAtBnB,SAACJ,GAC1B,IAAMK,EAAcL,EAAEE,OACtBG,EAAYrC,OAASqC,EAAYrC,MACjCqC,EAAYC,MAAMC,WAAmC,IAAtBF,EAAYrC,MAAc,UAAY,UAqBrEwC,CAAmBR,GAlBG,SAACC,GACEL,EAAiBa,SAASR,GAEjDd,GAAkBuB,MAAK,SAAArC,GAAO,OAAKA,EAAQ3B,UAAYuD,KACrDU,IAAEC,OAAOzB,IAAmB,SAAAd,GAAO,OAAKA,EAAQ3B,UAAYuD,KAC5Dd,GAAkB0B,KAAKlD,EAAamD,MAAK,SAAAzC,GAAO,OAAKA,EAAQ3B,UAAYuD,MAG3Eb,GAAmBsB,MAAK,SAAArC,GAAO,OAAKA,EAAQ1B,WAAasD,KACvDU,IAAEC,OAAOxB,IAAoB,SAAAf,GAAO,OAAKA,EAAQ1B,WAAasD,KAC9Db,GAAmByB,KAAKlD,EAAamD,MAAK,SAAAzC,GAAO,OAAIA,EAAQ1B,WAAasD,MAE7Ed,GAAkB4B,QAAU,GAAO3B,GAAmB2B,QAAU,EAAKpB,IAAcD,EAAQiB,IAAEK,MAAM7B,GAAmBC,KAQvH6B,CAAgBhB,IA+BlB,OACE,eAAC1B,EAAD,WACE,cAAC,EAAD,CAAQI,YA9Ba,SAACqB,GACxBT,GAAmBD,GACdA,GACHI,EAAQiB,IAAEO,OAAOrD,GAAc,SAAAQ,GAAO,OACpCA,EAAQ5B,SAGR6C,GACFI,EAAQiB,IAAEO,OAAOrD,GAAc,SAAAQ,GAAO,OACpCA,EAAQ5B,QACR0E,YAoBqCzC,MAAO,iBAC9C,cAAC,EAAD,CAAQC,YAjBiB,SAACqB,GAC5BP,GAAuBD,GAClBA,GACHE,EAAQiB,IAAEO,OAAOrD,GAAc,SAAAQ,GAAO,OACpCA,EAAQzB,sBAGR4C,GACFE,EAAQiB,IAAEO,OAAOrD,GAAc,SAAAQ,GAAO,OACpCA,EAAQzB,qBACRuE,YAOyCzC,MAAO,sBAClD,cAAC,EAAD,CAAQM,UAAWY,EAAkBjB,YAAaA,EAAaD,MAAO,wBACtE,cAAC,EAAD,CAAQM,UAAWe,EAAmBpB,YAAaA,EAAaD,MAAO,6B,iDC9D9D0C,GArBM,SAACC,GACpB,MAAwB3D,mBAAS,IAAjC,mBAAOO,EAAP,KAAaqD,EAAb,KAiBA,OAfAC,qBAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAS,yCAAG,6BAAAC,EAAA,+EAEKC,KAAMC,IAAIN,GAFf,OAERpD,EAFQ,OAGdqD,EAAQrD,EAAKA,MAHC,gDAKd2D,QAAQC,MAAR,MALc,yDAAH,qDASfL,OACC,CAACH,IAEG,CAAEpD,SC4BI6D,GAtCH,WACV,IAAMC,EAAY3E,IACZ4E,ETAC3E,qBAAWR,GSCZ6C,EAAUnC,IACRU,EAASmD,GAAa,uDAAtBnD,KAERsD,qBAAU,WACRS,EAAU/D,KACT,CAACA,IAEJsD,qBAAU,WACR7B,EAAQqC,KACP,CAACA,IAgBJ,OACE,sBAAKE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACxG,EAAD,UAhBEyG,MAAMC,QAAQJ,IAAcA,EAAUhB,OAAS,EAE/C,qCACE,cAAC,GAAD,CAAU5E,MAAO4F,IACjB,cAAC,EAAD,OAKG,qDCvBEK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.eca5f790.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n  @import url(//fonts.googleapis.com/css?family=Roboto);\r\n  @import url(//fonts.googleapis.com/css?family=Open+Sans);\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    color: #333;\r\n    font-family: 'Roboto', 'Open Sans';    \r\n  }\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  display: flex;\r\n  margin: auto;\r\n  flex-direction: column;\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledListComponent = styled.div`\r\n  width: 100%;\r\n  @media (min-width: 768px) {\r\n    width: 70%;\r\n  }\r\n`;\r\n\r\nexport const StyledList = styled.ol`\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeadline = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 20% 20% 40% 20%;\r\n  background-color: #f0f0f0;\r\n  border-bottom: 1px solid #c0c0c0;\r\n`;\r\n\r\nexport const StyledColumn = styled.h3`\r\n  text-align: center;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\n","import { StyledHeadline, StyledColumn } from './ListHeadline.style';\r\n\r\nconst ListHeadline = ({props}) => (\r\n  <StyledHeadline>\r\n    <StyledColumn>\r\n      name\r\n    </StyledColumn>\r\n    <StyledColumn>\r\n      country\r\n    </StyledColumn>\r\n    <StyledColumn>\r\n      industry\r\n    </StyledColumn>\r\n    <StyledColumn>\r\n      employees\r\n    </StyledColumn>\r\n  </StyledHeadline>\r\n);\r\n\r\nexport default ListHeadline;","import styled from \"styled-components\";\r\n\r\nexport const StyledItem = styled.li`\r\n  padding: 20px 0;\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: 20% 20% 40% 20%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  background-color: #f8f8f8;\r\n  \r\n  @media (min-width: 768px) {\r\n    padding: 20px 20px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const StyledText = styled.p`\r\n  margin: 0;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  @media (min-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n`;","import { StyledItem, StyledText } from \"./ListItem.style\" \r\n\r\nconst ListItem = ({props}) => {\r\n  return (\r\n    <StyledItem>\r\n      <StyledText>\r\n        {props.name}\r\n      </StyledText>\r\n      <StyledText>\r\n        {props.country}\r\n      </StyledText>\r\n      <StyledText>\r\n        {props.industry}\r\n      </StyledText>\r\n      <StyledText>\r\n        {props.numberOfEmployees}\r\n      </StyledText>\r\n    </StyledItem>\r\n  );\r\n}\r\n\r\nexport default ListItem;","import React, { useContext, useState } from 'react';\r\n\r\nconst SetOriginalListContext = React.createContext();\r\nconst UseOriginalListContext = React.createContext();\r\nconst SetListContext = React.createContext();\r\nconst UseListContext = React.createContext();\r\nconst ResetListContext = React.createContext();\r\n\r\nexport const useOriginalList = () => {\r\n  return useContext(UseOriginalListContext);\r\n}\r\n\r\nexport const useOriginalListUpdate = () => {\r\n  return useContext(SetOriginalListContext);\r\n}\r\n\r\nexport const useList = () => {\r\n  return useContext(UseListContext);\r\n}\r\n\r\nexport const useListUpdate = () => {\r\n  return useContext(SetListContext);\r\n}\r\n\r\nexport const useListReset = () => {\r\n  return useContext(ResetListContext);\r\n}\r\n\r\nexport const ListProvider = ({ children }) => {\r\n  const [originalList, setOriginalList] = useState([]);\r\n  const [modifiedList, setModifiedList] = useState([]);\r\n\r\n  const updateList = (data) => {\r\n    setModifiedList(data);\r\n  }\r\n\r\n  const resetList = () => {\r\n    setModifiedList(originalList);\r\n  }\r\n\r\n  const updateOriginalList = (data) => {\r\n    setOriginalList(data);\r\n  }\r\n\r\n\r\n  return (\r\n    <UseOriginalListContext.Provider value={originalList}>\r\n      <SetOriginalListContext.Provider value={updateOriginalList}>\r\n        <UseListContext.Provider value={modifiedList}>\r\n          <SetListContext.Provider value={updateList}>\r\n            <ResetListContext.Provider value={resetList}>\r\n              {children}\r\n            </ResetListContext.Provider>\r\n          </SetListContext.Provider>\r\n        </UseListContext.Provider>\r\n      </SetOriginalListContext.Provider>\r\n    </UseOriginalListContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ListProvider;","import { StyledListComponent, StyledList } from \"./List.style\"\r\nimport ListHeadline from \"./ListHeadline/ListHeadline\";\r\nimport ListItem from './ListItem/ListItem';\r\n\r\nimport { useList } from '../../hooks/useModList';\r\n\r\nconst List = () => {\r\n  const list = useList();\r\n\r\n  return (\r\n    <StyledListComponent>\r\n      <ListHeadline />\r\n      <StyledList>\r\n        {list.map((element) => <ListItem props={element} key={element.id} />)}\r\n      </StyledList>\r\n    </StyledListComponent>\r\n  )\r\n}\r\n\r\nexport default List;","import styled from \"styled-components\"\r\n\r\nexport const StyledControls = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #f0f0f0;\r\n  width: 100%;\r\n  padding-bottom: 20px;\r\n  @media (min-width: 768px) {\r\n    width: 30%;\r\n    padding: 0;\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledSorter = styled.div`\r\n  cursor: pointer;\r\n  padding: 20px;\r\n  font-weight: bold;\r\n  background-color: #dadada;\r\n\r\n  &:hover {\r\n    background-color: #cacaca;\r\n    transition: all .4s ease;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #2b93ba;\r\n  }\r\n`;","import { StyledSorter } from './Sorter.style';\r\n\r\nconst Sorter = ({ title, handleClick, isToggle }) => {\r\n  return (\r\n    <StyledSorter onClick={handleClick} isToggle={isToggle}>\r\n      {title}\r\n    </StyledSorter>\r\n  )\r\n}\r\n\r\nexport default Sorter;","import styled from \"styled-components\";\r\n\r\n\r\nexport const StyledList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nexport const StyledHeadline = styled.li`\r\n  padding: 20px;\r\n  font-weight: bold;\r\n  background-color: #e0e0e0;\r\n`\r\n\r\nexport const StyledItem = styled.li`\r\n  padding: 10px 10px 10px 20px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #e7e7e7;\r\n    transition: all .4s ease;\r\n  }\r\n`;","import { StyledHeadline, StyledList, StyledItem } from './Filter.style';\r\n\r\nconst Filter = ({ itemsList, handleClick, title }) => {\r\n\r\n  const createMenuItems = () => {\r\n    let keyNum = 0;\r\n    return itemsList.map(element => {\r\n      keyNum++;\r\n      return (\r\n        <StyledItem key={keyNum} onClick={handleClick}>\r\n          {element}\r\n        </StyledItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <StyledList>\r\n      <StyledHeadline>\r\n        {title}\r\n      </StyledHeadline>\r\n      {createMenuItems()}\r\n    </StyledList>\r\n  )\r\n}\r\n\r\nexport default Filter;","import { useState } from 'react';\r\n\r\nimport { StyledControls } from \"./Controls.style\"\r\nimport Sorter from '../Sorters/Sorter';\r\nimport Filter from '../Filters/Filter';\r\n\r\nimport { useOriginalList, useList, useListUpdate, useListReset } from '../../hooks/useModList';\r\n\r\nimport _ from 'lodash';\r\n\r\nconst filterCountryList = [];\r\nconst filterIndustryList = [];\r\n\r\nconst Controls = () => {\r\n  const [nameSortToggle, setNameSortToggle] = useState(false);\r\n  const [employeeSortToggle, setEmployeeSortToggle] = useState(false);\r\n\r\n  const originalList = useOriginalList();\r\n  const modifiedList = useList();\r\n  const setList = useListUpdate();\r\n  const resetList = useListReset();\r\n  const countryItemsList = [...new Set(originalList.map(element => element.country))].sort();\r\n  const industryItemsList = [...new Set(originalList.map(element => element.industry))].sort();\r\n\r\n  const colorToggledFilter = (e) => {\r\n    const clickedItem = e.target;\r\n    clickedItem.value = !clickedItem.value;\r\n    clickedItem.style.background = clickedItem.value === 1 ? '#45C3F2' : '#f0f0f0';\r\n  }\r\n\r\n  const handleFiltering = (clickedItemName) => {\r\n    const isClickedCountry = countryItemsList.includes(clickedItemName);\r\n    if (isClickedCountry) {\r\n      filterCountryList.some(element => (element.country === clickedItemName)) ?\r\n        _.remove(filterCountryList, element => (element.country === clickedItemName)) :\r\n        filterCountryList.push(originalList.find(element => (element.country === clickedItemName)));\r\n    }\r\n    else {\r\n      filterIndustryList.some(element => (element.industry === clickedItemName)) ?\r\n        _.remove(filterIndustryList, element => (element.industry === clickedItemName)) :\r\n        filterIndustryList.push(originalList.find(element => element.industry === clickedItemName));\r\n    }\r\n    (filterCountryList.length <= 0) && (filterIndustryList.length <= 0) ? resetList() : setList(_.union(filterCountryList, filterIndustryList));\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    const clickedItemName = e.target.firstChild.nodeValue;\r\n\r\n    colorToggledFilter(e);\r\n\r\n    handleFiltering(clickedItemName);\r\n  }\r\n\r\n  const handleNameSorter = (e) => {\r\n    setNameSortToggle(!nameSortToggle);\r\n    if (!nameSortToggle) {\r\n      setList(_.sortBy(modifiedList, element =>\r\n        element.name\r\n      ));\r\n    }\r\n    if (nameSortToggle) {\r\n      setList(_.sortBy(modifiedList, element =>\r\n        element.name\r\n      ).reverse());\r\n    }\r\n  }\r\n\r\n  const handleEmployeeSorter = (e) => {\r\n    setEmployeeSortToggle(!employeeSortToggle);\r\n    if (!employeeSortToggle) {\r\n      setList(_.sortBy(modifiedList, element =>\r\n        element.numberOfEmployees\r\n      ));\r\n    }\r\n    if (employeeSortToggle) {\r\n      setList(_.sortBy(modifiedList, element =>\r\n        element.numberOfEmployees\r\n      ).reverse());\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledControls>\r\n      <Sorter handleClick={handleNameSorter} title={'Sort by Name'} />\r\n      <Sorter handleClick={handleEmployeeSorter} title={'Sort by Employees'} />\r\n      <Filter itemsList={countryItemsList} handleClick={handleClick} title={'Filter by Countries'} />\r\n      <Filter itemsList={industryItemsList} handleClick={handleClick} title={'Filter by Industries'} />\r\n    </StyledControls>\r\n  )\r\n}\r\n\r\nexport default Controls;","import { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst useFetchData = (url) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!url) return;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await axios.get(url);\r\n        setData(data.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { data };\r\n};\r\n\r\nexport default useFetchData;","import GlobalStyle from \"./theme/global.style\";\r\n\r\nimport { useEffect } from \"react\";\r\n\r\nimport { StyledContainer } from \"./App.style\";\r\nimport List from './components/List/List';\r\nimport Controls from './components/Controls/Controls';\r\n\r\nimport useFetchData from \"./hooks/useFetchData\";\r\nimport { useOriginalList, useOriginalListUpdate, useListUpdate } from './hooks/useModList';\r\n\r\nconst App = () => {\r\n  const useOgList = useOriginalList();\r\n  const setOgList = useOriginalListUpdate();\r\n  const setList = useListUpdate();\r\n  const { data } = useFetchData('https://my.api.mockaroo.com/squiz.json?key=1e81f470');\r\n\r\n  useEffect(() => {\r\n    setOgList(data);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    setList(useOgList)\r\n  }, [useOgList]);\r\n\r\n  const renderIfFetched = () => {\r\n    if (Array.isArray(useOgList) && useOgList.length > 0) {\r\n      return (\r\n        <>\r\n          <Controls props={useOgList} />\r\n          <List />\r\n        </>\r\n      )\r\n    }\r\n    else {\r\n      return <div>Loading data</div>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <GlobalStyle />\r\n      <StyledContainer>\r\n        {renderIfFetched()}\r\n      </StyledContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport ListProvider from \"./hooks/useModList\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ListProvider>\r\n      <App />\r\n    </ListProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}